// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/dragonfish-tech/go/pkg/logger"
	"github.com/ride-app/user-service/config"
	"github.com/ride-app/user-service/internal/api-handlers"
	"github.com/ride-app/user-service/internal/repositories/saved-location"
	"github.com/ride-app/user-service/internal/repositories/user"
	"github.com/ride-app/user-service/third-party"
)

// Injectors from wire.go:

func InitializeService(logger2 logger.Logger, config2 *config.Config) (*apihandlers.UserServiceServer, error) {
	app, err := thirdparty.NewFirebaseApp(logger2, config2)
	if err != nil {
		return nil, err
	}
	firebaseImpl, err := userrepository.NewFirebaseUserRepository(app, logger2)
	if err != nil {
		return nil, err
	}
	savedlocationrepositoryFirebaseImpl, err := savedlocationrepository.NewFirebaseSavedLocationRepository(app, logger2)
	if err != nil {
		return nil, err
	}
	userServiceServer := apihandlers.New(firebaseImpl, savedlocationrepositoryFirebaseImpl, logger2)
	return userServiceServer, nil
}
